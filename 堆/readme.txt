区分堆(heap)与栈(stack)：堆与二叉树有关，像一堆金字塔型泥沙；而栈像一个直立垃圾桶，一列下来。

堆(heap)
又被为优先队列(priority queue)。尽管名为优先队列，但堆并不是队列。回忆一下，在队列中，我们可以进行的限定操作是dequeue和enqueue。
dequeue是按照进入队列的先后顺序来取出元素。而在堆中，我们不是按照元素进入队列的先后顺序取出元素的，而是按照元素的优先级取出元素。

性质
堆的实现通过构造二叉堆（binary heap），实为二叉树的一种；由于其应用的普遍性，当不加限定时，均指该数据结构的这种实现。这种数据结构具有以下性质。
任意节点小于（或大于）它的所有后裔，最小元（或最大元）在堆的根上（堆序性）。
堆总是一棵完全树。即除了最底层，其他层的节点都被元素填满，且最底层尽可能地从左到右填入。

实现
堆的主要操作是插入和删除最小元素(元素值本身为优先级键值，小元素享有高优先级)
在插入或者删除操作之后，我们必须保持该实现应有的性质: 1. 完全二叉树 2. 每个节点值都小于或等于它的子节点


模块heapq中一些重要的函数
 函 数                                                      描 述
 heappush(heap, x)                                        将x压入堆中
 heappop(heap)                                      从堆中弹出最小的元素
 heapify(heap)                                           让列表具备堆特征
 heapreplace(heap, x)                            弹出最小的元素，并将x压入堆中
 nlargest(n, iter)                                       返回iter中n个最大的元素
 nsmallest(n, iter)                                   返回iter中n个最小的元素